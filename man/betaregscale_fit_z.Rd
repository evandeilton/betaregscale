% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/betaregscale.R
\name{betaregscale_fit_z}
\alias{betaregscale_fit_z}
\title{Função para ajustar um modelo beta ordinal}
\usage{
betaregscale_fit_z(
  formula,
  dados,
  link = "logit",
  link_phi = "logit",
  num_hessiana = TRUE,
  acumulada = TRUE,
  ncuts = 100,
  type = "m",
  lim = 0.5,
  repar = "2",
  method = "BFGS"
)
}
\arguments{
\item{formula}{Fórmula para expressar a relação das preditoras X1, X2, Xn
relacionadas com os betas e Z1 + Z2 com phi. A formula pode ser escrita em
forma composta. Isto é, com três partes, como no exemplo y ~ x1 + x2 | z1 + z2.
Para mais detalhes veja \code{\link{Formula}}.}

\item{dados}{Um conjunto de dados que contém a variável dependente e as variáveis
independentes especificadas na fórmula.}

\item{link}{Nome da função de ligação a ser usada para as preditoras X1, X2, ..., Xn.
Pode ser uma das seguintes: "logit", "probit", "cauchit", "cloglog" ou "identity". O padrão é "logit".}

\item{link_phi}{Nome da função de ligação a ser usada para as preditoras Z1, Z2, ..., Zn relacionadas com phi.
Pode ser uma das seguintes: "log", "sqrt e "identity". O padrão é "log".}

\item{num_hessiana}{Se TRUE, calcula a matriz Hessian numericamente com o
pacote numDeriv. Se FALSE, calcula com o padrão da optim}

\item{acumulada}{Se TRUE, retorna a verossimilhança pela pbeta, dbeta caso contrário.}

\item{ncuts}{Número de cortes para a variável ordinal. O padrão é 100.}

\item{type}{Tipo de intervalo. "m" = meio; "l" = esquerda e "r" = direita.}

\item{lim}{Região de incerteza da medida. Padrão 0.5.}

\item{repar}{Tipo de reparametrização sendo 0, 1 ou 2. Padrão 2.}

\item{method}{Método a ser usado. Veja detalhes em \code{\link{optim}}}
}
\value{
Retorna uma lista contendo o resultado da otimização e uma tabela com
estatísticas sumarizadas do ajuste.
}
\description{
A função betaregscale ajusta um modelo beta para escala usando a função optim
do pacote stats, retornando uma tabela com estatísticas sumarizadas do ajuste,
incluindo intervalos de confiança e cálculo do BIAS.
}
\examples{
n <- 50
dados <- data.frame(
  x1 = rnorm(n), x2 = rnorm(n),
  z1 = runif(n), z2 = runif(n))

formula <- y ~ x1 + x2 | z1
dados_simulados <- betaregscale_simula_dados_z(
 formula_x = ~x1 + x2,
 formula_z = ~z1,
 dados = dados,
 betas = c(0.2, -0.5, 0.3),
 zetas = c(1, 1.2),
 link = "logit",
 link_phi = "logit",
 ncuts = 100)
 
fit_z <- betaregscale_fit_z(
 formula = formula,
 dados = dados_simulados,
 link = "logit",
 link_phi = "logit",
 num_hessiana = TRUE)
coe <- betaregscale_coef(fit_z)
coe$est
coe$gof
}
